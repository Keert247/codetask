import java.util.*;

public class BalancedSubstringFinder {
    public static String[] getBalancedSubstrings(String s) {
        List<String> longsubstr = new ArrayList<>();
        int maxLength = 0;

        for (int start = 0; start < s.length(); start++) {
            for (int end = start + 1; end <= s.length(); end++) {
                String substring = s.substring(start, end);
                
                if (isBalanced(substring)) {
                    if (substring.length() > maxLength) {
                        longsubstr.clear();
                        longsubstr.add(substring);
                        maxLength = substring.length();
                    } else if (substring.length() == maxLength) {
                        longsubstr.add(substring);
                    }
                }
            }
        }
        return longsubstr.toArray(new String[0]);
    }

    private static boolean isBalanced(String substring) {
        if (substring.length() < 2) 
        return false;
        Map<Character, Integer> count = new HashMap<>();
        for (char c : substring.toCharArray()) {
            count.put(c, count.getOrDefault(c, 0) + 1);
        }

        if (count.size() != 2) return false;

        Iterator<Integer> freq = count.values().iterator();
        int firstFreq = freq.next();
        int secondFreq = freq.next();

        return firstFreq == secondFreq;
    }

    public static void main(String[] args) {
        String[] input = {"cabbacc","abababa", "aaaaaaa"};

        for (String test : input) {
            String[] result = getBalancedSubstrings(test);
            System.out.println("Input: " + test);
            System.out.println("Longest Balanced Substrings: " + Arrays.toString(result));
            System.out.println();
        }
    }
}